#!/usr/bin/env bash

# Get location of repository by reading the symlink
# WARNING: It asumes symlink name as `dcc-tools`
dt_exec_symlink=$(command -v dcc-tools)
dt_exec_path=$(readlink $dt_exec_symlink)
TOOLS_DIR=${dt_exec_path%%/dcc-tools}

BIN_DIR="$HOME/.local/bin"

# Set git command
git_cmd="git -C $TOOLS_DIR"

function myhelp() {

    printf -- "  bucket      Administra repositorios externos\n"
    printf -- "  fetch       Descarga actualizaciones\n"
    printf -- "  install     Instala una herramienta\n"
    printf -- "  list        Lista herramientas instaladas\n"
    printf -- "  os-release  Informaci√≥n sobre el servidor\n"
    printf -- "  pull        Aplica las actualizaciones\n"
    printf -- "  remove      Elimina una herramienta\n"
    printf -- "  update      Actualiza todas las herramientas\n"

}

function list_tools() {

    for i in $(find $HOME/.local/bin) ; do
        if [[ -L "$i" ]] ; then
            og_path=$(readlink $i)
            if [[ ${og_path%/*} == "$TOOLS_DIR" ]] ; then
                printf -- "%s\n" ${og_path##*/}
            fi
        fi
    done

}

<<<<<<< HEAD
function destroy_tools() {

    height=$(tput lines)
    width=$(tput cols)

    clear

    tput cup "$((height/2))" "$((width/2))"

    printf -- "\e[3mI Used the Stones to Destroy the Stones\e[0m\n"

    exit

}

=======
>>>>>>> parent of ea95336 (feat(dcc-tools): catch 'dcc-tools' argument for install|remove)
function edit_tools() {

    local mode=$1
    local tool=$2

    if [[ -z $tool ]] ; then
        printf -- "ERROR: No tool selected\n" 1>&2
        exit

    elif [[ $tool == "imprime" ]] ; then
        :

    elif [[ $tool == "zola" ]] ; then
        if [[ ! -f $TOOLS_DIR/zola ]] ; then
            $TOOLS_DIR/zola-fetch install $TOOLS_DIR
        fi

    else
        printf -- "ERROR: ${tool}: unknown tool\n" 1>&2
        exit
    fi

    if [[ $mode == "install" ]] ; then
        ln -s $TOOLS_DIR/$tool $BIN_DIR/$tool

    elif [[ $mode == "remove" ]] ; then
        rm $BIN_DIR/$tool
    fi

}

for arg in "$@"
do
    case $arg in
        help|-h|--help)
            shift
            myhelp
            ;;
        fetch)
            shift
            $git_cmd fetch
            exit
            ;;
        pull)
            shift
            $git_cmd pull
            exit
            ;;
        git)
            shift
            $git_cmd "$@"
            exit
            ;;
        os-release)
            shift
            cat /etc/os-release
            exit
            ;;
        install)
            shift
            edit_tools "install" $1
            exit
            ;;
        remove)
            shift
            edit_tools "remove" $1
            exit
            ;;
        list)
            shift
            list_tools
            exit
            ;;
        *)
            ;;
    esac
done
